version: "3"

services:
  orion-demo:
    container_name: orion-demo
    image: fiware/orion:1.14.0
    ports:
      - "1026:1026"
    command: -dbhost mongodb-orion-demo

  mongodb-orion-demo:
    container_name: mongodb-orion-demo
    image: mongo:3.4
    command: --nojournal --smallfiles

  cygnus-demo:
    container_name: cygnus-demo
    image: fiware/cygnus-ngsi:1.9.0
    ports:
      - "5050:5050"
      - "8081:8081"
    environment:
      - CYGNUS_LOG_LEVEL=DEBUG
      - CYGNUS_MONGO_HOSTS=mongodb-comet-demo:27017

  comet-demo:
    container_name: comet-demo
    image: fiware/sth-comet:2.3.0
    depends_on:
      - mongodb-comet-demo
    ports:
      - "8666:8666"
    environment:
      - STH_HOST=0.0.0.0
      - DEFAULT_SERVICE=myhome
      - DEFAULT_SERVICE_PATH=/environment
      - DB_URI=mongodb-comet-demo:27017
      - LOGOPS_LEVEL=DEBUG

  mongodb-comet-demo:
    container_name: mongodb-comet-demo
    image: mongo:3.4
    command: --nojournal

  idas-demo:
    container_name: idas-demo
    build:
      context: ../sensor-data-poc/platform-v3
      dockerfile: idas/Dockerfile
    image: ool/idas:1.7.0.1
    depends_on:
        - mosquitto-demo
    ports:
        - "4041:4041"
    environment:
        - IOTA_MQTT_HOST=mosquitto-demo
        - IOTA_MQTT_PORT=1883
        - IOTA_MQTT_USERNAME=iota
        - IOTA_MQTT_PASSWORD=password

  mongodb-idas-demo:
    container_name: mongodb-idas-demo
    image: mongo:3.4
    command: --nojournal --smallfiles

  mosquitto-demo:
    container_name: mosquitto-demo
    build:
      context: ../sensor-data-poc/platform-v3
      dockerfile: mosquitto/Dockerfile
    image: ool/mosquitto:1.4.15.1
    ports:
      - "1883:1883"
    environment:
      - IOT_USERNAME=iota
      - IOT_PASS=password

  quantumleap:
    container_name: quantumleap
    image: ${QL_IMAGE:-smartsdk/quantumleap}
    ports:
      - "8668:8668"
    depends_on:
      - mongodb-orion-demo
      - orion-demo
      - crate
    environment:
      - CRATE_HOST=${CRATE_HOST:-crate}
      - USE_GEOCODING=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  crate:
    container_name: crate
    image: crate:${CRATE_VERSION:-3.0.5}
    command: crate -Clicense.enterprise=false -Cauth.host_based.enabled=false
      -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=crate-datasource,grafana-clock-panel,grafana-worldmap-panel
    depends_on:
      - crate

  redis:
    container_name: redis
    image: redis
    deploy:
      # Scaling Redis requires some extra work.
      # See https://get-reddie.com/blog/redis4-cluster-docker-compose/
      replicas: 1
    ports:
      - "6379:6379"
